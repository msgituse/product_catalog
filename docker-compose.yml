services:
  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: catalog
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: my_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - backend_network   

  # NestJS Service
  nestjs:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nestjs
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=catalog
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
      - /app/backend/dist
    networks:
      - backend_network

  # Next.js Service
  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:3001
    container_name: nextjs
    ports:
      - "3000:3000"
    depends_on:
      - nestjs
    networks:
      - frontend_network
    environment:
      NODE_ENV: production
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
      - /app/frontend/.next

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
